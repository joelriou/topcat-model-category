import Mathlib.CategoryTheory.MorphismProperty.Limits
import Mathlib.CategoryTheory.Sites.Grothendieck

namespace CategoryTheory

variable {C : Type*} [Category C]
open Limits


namespace MorphismProperty

variable (W : MorphismProperty C) [W.IsStableUnderBaseChange]

structure Over {X S : C} (f : X ‚ü∂ S) {S' : C} (i : S' ‚ü∂ S) where
  {obj : C}
  {t : obj ‚ü∂ X}
  {l : obj ‚ü∂ S'}
  sq : IsPullback t l f i
  hl : W l

namespace Over

variable {W} {X S : C} {f : X ‚ü∂ S} {S' : C} {i : S' ‚ü∂ S} (h : W.Over f i)

def pullback {S'' : C} (œÜ : S'' ‚ü∂ S')
    {X'' : C} {t : X'' ‚ü∂ h.obj} {l : X'' ‚ü∂ S''}
    (sq : IsPullback t l h.l œÜ): W.Over f (œÜ ‚â´ i) where
  sq := sq.paste_horiz h.sq
  hl := of_isPullback sq h.hl

end Over

variable (J : GrothendieckTopology C) [HasPullbacks C]

def sieveLocally {X S : C} (f : X ‚ü∂ S) : Sieve S where
  arrows S' i := Nonempty (W.Over f i)
  downward_closed := by
    rintro S' S'' i ‚ü®h‚ü© l
    exact ‚ü®h.pullback  l (IsPullback.of_hasPullback _ _)‚ü©

lemma mem_sieveLocally_iff {X S : C} (f : X ‚ü∂ S) {S' : C} (i : S' ‚ü∂ S):
    W.sieveLocally f i ‚Üî Nonempty (W.Over f i) := Iff.rfl

def locally : MorphismProperty C := fun _ S f ‚Ü¶ W.sieveLocally f ‚àà J S

lemma le_locally : W ‚â§ W.locally J := by
  intro S' S f hf
  refine J.superset_covering ?_ (J.top_mem S)
  dsimp [locally]
  rw [top_le_iff, ‚Üê Sieve.id_mem_iff_eq_top, mem_sieveLocally_iff]
  exact ‚ü®{
    obj := S'
    t := ùüô _
    l := f
    sq := IsPullback.of_id_fst
    hl := hf
  }‚ü©

instance : (W.locally J).RespectsIso := by
  apply MorphismProperty.RespectsIso.of_respects_arrow_iso
  intro f g e hf
  refine J.superset_covering ?_ (J.pullback_stable (f := e.inv.right) hf)
  intro Z a h
  rw [Sieve.pullback_apply, mem_sieveLocally_iff] at h
  obtain ‚ü®h‚ü© := h
  rw [mem_sieveLocally_iff]
  exact ‚ü®{
    obj := h.obj
    t := h.t ‚â´ e.hom.left
    l := h.l
    sq := IsPullback.of_iso h.sq (Iso.refl _) (Arrow.leftFunc.mapIso e) (Iso.refl _)
        (Arrow.rightFunc.mapIso e) (by simp) (by simp) (by simp) (by simp)
    hl := h.hl
  }‚ü©

lemma locally_monotone {W‚ÇÅ W‚ÇÇ : MorphismProperty C}
    [W‚ÇÅ.IsStableUnderBaseChange] [W‚ÇÇ.IsStableUnderBaseChange] (hW : W‚ÇÅ ‚â§ W‚ÇÇ)
    (J : GrothendieckTopology C) : W‚ÇÅ.locally J ‚â§ W‚ÇÇ.locally J := by
  rintro X Y f hf
  refine J.superset_covering ?_ hf
  rintro S' i ‚ü®h‚ü©
  exact ‚ü®{
    sq := h.sq
    hl := hW _ h.hl
  }‚ü©

end MorphismProperty

end CategoryTheory
